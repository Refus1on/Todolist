services:

  api:
    image: refusion/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    command: python ./src/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./docker-config:/code/src/.env
    ports:
      - 8000:8000
    depends_on:
      db:
          condition: service_healthy
      migrate:
          condition: service_completed_successfully


  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./pg_data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  migrate:
    image: refusion/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    command: python ./src/manage.py migrate
    volumes:
      - ./docker-config:/code/src/.env
    depends_on:
      db:
        condition: service_healthy