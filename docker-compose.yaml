services:

  api:
    build: .
    image: refusion/todolist
    restart: always
    command: python ./src/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      db:
          condition: service_healthy
      migrate:
          condition: service_completed_successfully


  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./pg_data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todolist
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-37
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  migrate:
    build:
      context: .
    image: refusion/todolist
    command: python ./src/manage.py migrate
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy